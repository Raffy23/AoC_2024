import { expect, test } from 'vitest';
import { parseInput, part1, part2 } from './day06';

const sampleInput = `....#.....
.........#
..........
..#.......
.......#..
..........
.#..^.....
........#.
#.........
......#...
`;

test('input parsing', () => {
  expect(parseInput(sampleInput)).toStrictEqual({
    grid: [
      ['.', '.', '.', '.', '#', '.', '.', '.', '.', '.'],
      ['.', '.', '.', '.', '.', '.', '.', '.', '.', '#'],
      ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.'],
      ['.', '.', '#', '.', '.', '.', '.', '.', '.', '.'],
      ['.', '.', '.', '.', '.', '.', '.', '#', '.', '.'],
      ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.'],
      ['.', '#', '.', '.', '.', '.', '.', '.', '.', '.'],
      ['.', '.', '.', '.', '.', '.', '.', '.', '#', '.'],
      ['#', '.', '.', '.', '.', '.', '.', '.', '.', '.'],
      ['.', '.', '.', '.', '.', '.', '#', '.', '.', '.'],
    ],
    guard: {
      x: 4,
      y: 6,
    },
  });
});

test('part1 - example', () => {
  expect(part1(parseInput(sampleInput))).toStrictEqual(41);
});

test('part2 - example', () => {
  expect(part2(parseInput(sampleInput))).toStrictEqual(6);
});
